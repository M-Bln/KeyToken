{"version":3,"file":"src_connect-to-network_create-fhevm-instance_ts.main.js","mappings":";;;;;;;;;;;;;;;;AAAkD;AACM;AAEjD,MAAM,eAAe,GAAG,4CAA4C,CAAC;AAErE,MAAM,mBAAmB,GAAG,KAAK,EACtC,eAAuB,EACvB,OAAe,EACf,QAAkB,EAClB,EAAE;IACF,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,UAAU,EAAE,CAAC;IAC5C,MAAM,OAAO,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC5C,MAAM,GAAG,GAAG,MAAM,QAAQ,CAAC,IAAI,CAAC;QAC9B,+DAA+D;QAC/D,EAAE,EAAE,4CAA4C;QAChD,0EAA0E;QAC1E,IAAI,EAAE,cAAc;KACrB,CAAC,CAAC;IACH,MAAM,OAAO,GAAG,4CAAe,CAAC,eAAe,EAAE,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;IACzE,MAAM,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7B,MAAM,sDAAS,EAAE,CAAC,CAAC,YAAY;IAC/B,OAAO,2DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;AACzD,CAAC,CAAC;;;;;;;;;;;ACtBF;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA","sources":["webpack://ui-confidential-erc1155/./src/connect-to-network/create-fhevm-instance.ts","webpack://ui-confidential-erc1155/ignored|/home/mlnd42/Documents/programming/front/KeyToken/node_modules/asn1.js/node_modules/bn.js/lib|buffer","webpack://ui-confidential-erc1155/ignored|/home/mlnd42/Documents/programming/front/KeyToken/node_modules/bn.js/lib|buffer","webpack://ui-confidential-erc1155/ignored|/home/mlnd42/Documents/programming/front/KeyToken/node_modules/brorand|crypto","webpack://ui-confidential-erc1155/ignored|/home/mlnd42/Documents/programming/front/KeyToken/node_modules/create-ecdh/node_modules/bn.js/lib|buffer","webpack://ui-confidential-erc1155/ignored|/home/mlnd42/Documents/programming/front/KeyToken/node_modules/diffie-hellman/node_modules/bn.js/lib|buffer","webpack://ui-confidential-erc1155/ignored|/home/mlnd42/Documents/programming/front/KeyToken/node_modules/elliptic/node_modules/bn.js/lib|buffer","webpack://ui-confidential-erc1155/ignored|/home/mlnd42/Documents/programming/front/KeyToken/node_modules/libsodium/dist/modules|fs","webpack://ui-confidential-erc1155/ignored|/home/mlnd42/Documents/programming/front/KeyToken/node_modules/libsodium/dist/modules|path","webpack://ui-confidential-erc1155/ignored|/home/mlnd42/Documents/programming/front/KeyToken/node_modules/miller-rabin/node_modules/bn.js/lib|buffer","webpack://ui-confidential-erc1155/ignored|/home/mlnd42/Documents/programming/front/KeyToken/node_modules/public-encrypt/node_modules/bn.js/lib|buffer","webpack://ui-confidential-erc1155/ignored|/home/mlnd42/Documents/programming/front/KeyToken/node_modules/readable-stream/lib/internal/streams|util","webpack://ui-confidential-erc1155/ignored|/home/mlnd42/Documents/programming/front/KeyToken/node_modules/readable-stream/lib|util","webpack://ui-confidential-erc1155/ignored|/home/mlnd42/Documents/programming/front/KeyToken/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams|util","webpack://ui-confidential-erc1155/ignored|/home/mlnd42/Documents/programming/front/KeyToken/node_modules/stream-browserify/node_modules/readable-stream/lib|util"],"sourcesContent":["import { ethers, Provider, Signer } from 'ethers';\nimport { createInstance, initFhevm } from 'fhevmjs/web';\n\nexport const FHE_LIB_ADDRESS = '0x000000000000000000000000000000000000005d';\n\nexport const createFhevmInstance = async (\n  contractAddress: string,\n  account: Signer,\n  provider: Provider,\n) => {\n  const network = await provider.getNetwork();\n  const chainId = +network.chainId.toString();\n  const ret = await provider.call({\n    // fhe lib address, may need to be changed depending on network\n    to: '0x000000000000000000000000000000000000005d',\n    // first four bytes of keccak256('fhePubKey(bytes1)') + 1 byte for library\n    data: '0xd9d47bb001',\n  });\n  const decoded = ethers.AbiCoder.defaultAbiCoder().decode(['bytes'], ret);\n  const publicKey = decoded[0];\n  await initFhevm(); // Load TFHE\n  return createInstance({ chainId: chainId, publicKey });\n};\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":[],"sourceRoot":""}